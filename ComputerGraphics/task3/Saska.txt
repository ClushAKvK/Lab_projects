#include <windows.h> 
#include "glut.h" 

char title[] = "3D Shapes with animation";
GLfloat angle = 0.0f;
//GLfloat angleCube = 0.0f;   
int refreshMills = 15;

void initGL() {
    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
    glClearDepth(1.0f);
    glEnable(GL_DEPTH_TEST);
    glDepthFunc(GL_LEQUAL);
    glShadeModel(GL_SMOOTH);
    glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glMatrixMode(GL_MODELVIEW);


    glLoadIdentity();
    glTranslatef(0.0f, 0.0f, -8.5f);
    glRotatef(angle, 0.0f, 1.0f, 0.0f);


    ///////////////////////////////////////////Box
    glColor4f(1.0f, 0.5f, 0.0f, 0.0f);
    glutSolidCube(2); //BOX

    glBegin(GL_QUADS);

    // Front door
    glColor3f(0.1f, 0.1f, 0.1f);
    glVertex3f(1.0f, -1.0f, 1.05f);
    glVertex3f(0.0f, -1.0f, 1.05f);
    glVertex3f(0.0f, 0.5f, 1.05f);
    glVertex3f(1.0f, 0.5f, 1.05f);

    // Back window
    glColor3f(0.0f, 0.0f, 1.0f);
    glVertex3f(0.5f, -0.5f, -1.05f);
    glVertex3f(-0.5f, -0.5f, -1.05f);
    glVertex3f(-0.5f, 0.5f, -1.05f);
    glVertex3f(0.5f, 0.5f, -1.05f);

    //Перегородка ввертикальная
    glColor3f(0.1f, 0.1f, 0.1f);
    glVertex3f(0.02f, -0.5f, -1.06f);
    glVertex3f(-0.02f, -0.5f, -1.06f);
    glVertex3f(-0.02f, 0.5f, -1.06f);
    glVertex3f(0.02f, 0.5f, -1.06f);


    // Back window
    glColor3f(0.1f, 0.1f, 0.1f);
    glVertex3f(0.5f, -0.02f, -1.05f);
    glVertex3f(-0.5f, -0.02f, -1.05f);
    glVertex3f(-0.5f, 0.02f, -1.05f);
    glVertex3f(0.5f, 0.02f, -1.05f);


    //Under box garden
    glColor3f(0.0f, 1.0f, 0.0f);
    glVertex3f(2.5f, -1.0f, 2.5f);
    glVertex3f(-2.5f, -1.0f, 2.5f);
    glVertex3f(-2.5f, -1.0f, -2.5f);
    glVertex3f(2.5f, -1.0f, -2.5f);

    glEnd();  //end draw cude


    ///////////////////////////////////////////Крыша
    glLoadIdentity();
    glTranslatef(0.0f, 1.5f, -6.0f);
    glRotatef(angle, 0.0f, 1.0f, 0.0f);

    glColor4f(1.0f, 1.0f, 0.0f, 0.0f);
    glBegin(GL_TRIANGLES);
    // Front
    glVertex3f(0.0f, 1.0f, 0.0f);
    glVertex3f(-1.0f, -1.0f, 1.0f);
    glVertex3f(1.0f, -1.0f, 1.0f);

    // Right
    glVertex3f(0.0f, 1.0f, 0.0f);
    glVertex3f(1.0f, -1.0f, -1.0f);
    glVertex3f(1.0f, -1.0f, 1.0f);

    // Back
    glVertex3f(0.0f, 1.0f, 0.0f);
    glVertex3f(1.0f, -1.0f, -1.0f);
    glVertex3f(-1.0f, -1.0f, -1.0f);

    // Left
    glVertex3f(0.0f, 1.0f, 0.0f);
    glVertex3f(-1.0f, -1.0f, 1.0f);
    glVertex3f(-1.0f, -1.0f, -1.0f);

    //Bottom
    glColor3f(0.1f, 0.0f, 0.0f);
    glVertex3f(1.0f, -1.0f, 1.0f);
    glVertex3f(-1.0f, -1.0f, 1.0f);
    glVertex3f(-1.0f, -1.0f, -1.0f);

    glVertex3f(1.0f, -1.0f, 1.0f);
    glVertex3f(-1.0f, -1.0f, -1.0f);
    glVertex3f(1.0f, -1.0f, -1.0f);

    glEnd();

    glutSwapBuffers();


    angle += 1.5f;
}


void timer(int value) {
    glutPostRedisplay();
    glutTimerFunc(refreshMills, timer, 0);
}


void reshape(GLsizei width, GLsizei height) {

    if (height == 0) height = 1;
    GLfloat aspect = (GLfloat)width / (GLfloat)height;


    glViewport(0, 0, width, height);


    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(45.0f, aspect, 0.1f, 100.0f);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE);
    glutInitWindowSize(640, 480);
    glutInitWindowPosition(50, 50);
    glutCreateWindow(title);
    glutDisplayFunc(display);
    glutReshapeFunc(reshape);
    initGL();
    glutTimerFunc(0, timer, 0);
    glutMainLoop();
    return 0;
}